0001  wo feb 24 11:40:47 CET 2010 TODO event_output MidiEvent support
      za mrt  6 22:48:43 CET 2010 DONE
0002  do feb 25 22:22:53 CET 2010 TODO make rplaymidi++ work as a two step system
                                       a) build an in-memory chunk     NODE -> midifile->chunk
                                       b) play the tracks in the chunk NODE -> chunk -> device[s]
0003 za feb 27 21:50:12 CET 2010 BUG rplaymidi reads a NoteOn without a NoteOff
         in fixtures/eurodance.midi.  Note 12, Rhythm track. I believe this was recorded
         with arecordmidi. So who's to blame? Is there an official midi file dumper somewhere?
0004 do mrt  4 23:20:06 CET 2010 BUG rmidiroute.rb:14:in `block in midi_route': undefined method `set_subs'
0005 do mrt  4 23:24:01 CET 2010 TODO writing ev: param := ':modwheel', reading same event -> param == 1.
                                      This is an inconsistency. Must be mapped back.
     za mrt  6 22:48:43 CET 2010 DONE
0006 ma mrt  8 21:08:06 CET 2010 BUG emptying the buffers is no good enough to avoid hanging notes.
                                     NoteOns may already have arrived in a device so we MUST send the NoteOffs.
                                     First make sure we use MidiEvent.
          I noticed the following: the INT-handler truly gets first. So we flush the queue.
          After that NoteOff's for hanging notes are sent, but to no avail
          Finally we get in the ensure of the Sequencer constructor.
0007 do mrt 11 21:39:48 CET 2010 BUG using alsa mallocs causes a critical condition since it uses
          malloc (probably) and not the ruby wrappers.  ALLOC or ALLOC_N.
          Also a failure should raise NoMemError. The least I can do is make sure these all go
          trough one container.
0008 do mrt 11 23:36:01 CET 2010 TODO: queue_timer interface is lacking...